알고리즘(BFS, 브루트 포스, 그래프)
	1. 입력을 받으면서 총 바이러스 개수, 행-열-시간을 저장한 바이러스 구조체 벡터를 만듬
	2. 벡터에서 활성화시킬 바이러스 M개를 재귀를 통해 뽑음. 이때, 남은 바이러스보다 활성화시켜야하는 바이러스가 더 많으면 -1 리턴
	3. 다뽑으면 BFS 시작
		-인접한 곳에 바이러스 또는 빈칸을 큐에 추가하고 visit 체크. 이때 빈칸일 경우 count를 1 증가시킴
		-인접한 곳 다 체크하고, count가 0이면 주변이 전부 바이러스거나 전부 벽이라는 뜻
				-> 즉 끝일 가능성이 높다. -> 후보군 모으는 벡터에 추가
	4. BFS가 끝나면, 먼저 visit 검사. visit에 체크가 안되어있는데 벽이 아니면 다 탐색 못한 것 -> -1 리턴
	5. 아니면 탐색 다 완료한 것. 전역변수에 탐색 다 완료한게 하나라도 있다는 뜻을 의미하는 변수를 true 로 지정
	6. 후보군 벡터를 정렬 -> 바이러스있는 곳이면 뒤로, 없는 곳이면 시간이 큰순으로 정렬
	7. 정렬된 후보군 벡터의 맨 앞 조사 -> 바이러스가 있는 곳이면 -1반환 / 없는 곳이면 시간 반환
	8. 다 끝나고 리턴된 시간을 검사.
			-> -1 이면 탐색을 다 완료한 게 하나라도 있는지 확인하는 전역변수 검사 -> 트루면 0 false면 -1 반환
			-> 아니면 그대로 출력.
	

주의점
	1. 주의해야하는 특이케이스
		-일자로 쭉 뻗은 곳의 끝에 바이러스가 존재하는 경우
		-맵이 벽과 바이러스로만 이루어진 경우 -> 0출력해야함
		-모든 바이러스들이 벽에 가로막혀 전체 탐색을 못하는 경우