-set : 중복이 없는 집합. 넣을 때마다 이진트리 형태로 값이 정렬되어 저장된다.
-multiset : 중복이 있는 집합. 넣을 때마다 이진트리 형태로 값이 정렬되어 저장됨

연산자
	end() : 집합의 끝에서 한번 더 간 곳에 해당하는 반복자를 반환함
	find()	: 찾으면 그 위치의 반복자를 반환. 없으면 end()에 해당하는 값을 반환함.
	insert() : 값을 넣고, 넣은 자리의 반복자를 반환함 / set일 경우 iterator와 bool 형태의 pait가 반환된다
	erase()	: 반복자를 넣고, 그 자리에 해당하는 원소를 삭제함. 그리고 그 삭제한 원소 + 1에 해당하는 반복자를 반환한다.	
	count(k) : 원소 k의 개수를 반환. set이면 0또는 1, multiset이면 있는만큼
	clear() : 비우기
		
	
반복자
	set<int>::iterator temp; 	식으로 선언해야함
	temp++ 또는 temp-- 식으로 다음, 이전 반복자로 접근 가능.(temp + 1)은 안통한다
	*temp	로 이 반복자가 가리키는 원소의 값을 참조할 수 있음.


주의
	set<int>::iterator temp = s.begin() 	(현재 s엔 자연수만 잇다고 가정)
	
	으로 반복자를 받고,

	s.insert(-1)

	로 s 의 맨 앞에 원소를 추가했을 때, temp는 여전히 s.begin()이 아니라, 한칸 앞을 가리키고 있다