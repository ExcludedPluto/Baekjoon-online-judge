알고리즘(정렬, MST)
	1. 모든 행성들의 x좌표, y좌표, z좌표를 꺼내 따로 저장하고, 오름차순으로 정렬
	2. 정렬한 것에서 인접한 것끼리 비용을 계산, (인접한 점 두개 + 비용)을 구조체로 n-1개의 원소를 가지는 배열 3개를 선언하고 집어넣음
	3. 그 구조체배열 3개는 비용을 기준으로 오름차순으로 정렬
	4. 구조체 배열 3개를 가리키는 3개의 인덱스 변수 xi, yi, zi를 선언
	5. xi, yi, zi 중 최소 비용을 unionFind 알고리즘으로 사이클이 형성되는지 확인하면서 집어넣음. 넣으면 edge 1증가, 넣어도 안넣어도 xi, yi, zi는 최소일시 1 증가시킨다
	6. edge가 n-1개가 되면 정지 -> 총 value 출력


푼과정
	1. MST로 풀어야하는 문제인건 바로 암. 근데 간선이 주어지지 않음 -> 간선을 직접 만들어야함
	2. 모든 행성간의 비용을 구하는건 너무 오래걸리고, 메모리 소모가 심함
		-> 가장 가까운 것이 될 만한 것들끼리만 비교하여 간선을 만들자
	3. 모든 행성을 정렬하여 인접한 것끼리 할까?
		-> 어떤 기준으로 정렬할 것인지 문제고, 또 정렬하더라도 인접하지만 거리는 제일 멀 수 있음 -> 비용계산공식이 좌표별로 독립적이기에
	4. 그럼 좌표별로 모든 점들을 정렬하여 인접한 것끼리 비용을 계산하고, 또 그 비용을 정렬하면 되겠구나
		-> 그럼 비용, 두 인접한 좌표를 가지고 있는 구조체를 선언하는게 좋겠구나
	5. 이렇게 간선을 얻고, 하나씩 집어넣는데 총 edge는 N-1개니까 넣을 때마다 edge를 1개씩 증가시켜 n-1이 되면 정지시키면 되겠구나
	6. 통과