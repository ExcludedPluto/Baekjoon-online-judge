알고리즘
	1. 아이디어 : 공의 이동횟수는 얼마나 멀리 떨어져있든 한번 이동할 때 그냥 1임. 따라서 끝으로 이동할 공이 적은 색깔의 공을 골라, 그 이동해야할 공의 수를 구하면
			그게 최소 이동횟수라고 생각.
	2. 왼쪽 빨강, 왼쪽 파랑, 오른쪽 빨강, 오른쪽 파랑을 각각 구함. 필연적으로 두개는 0이 될 수밖에 없음.
	3. 전체 빨강의 수, 전체 파랑의 수를 구함
	4. 전체 빨강의 수에 왼쪽 빨강, 오른쪽 빨강을 각각 뺌. 파랑으로도 마찬가지.
	5. 나온 4가지 수중에 가장 작은 것이 최소이동 횟수이다.
	

기타
	1. 공이 한쪽 색깔밖에 없으면, 필연적으로 4. 의 숫자 4개는 0이 되어, 답은 0이 되서 맞음
	2. 양쪽 끝에 같은 색깔의 공이 있더라도, 더 많은쪽으로 이동하는 게 최소이동횟수이니 알고리즘은 옳음
	3. 한쪽 색깔의 공이 극도로 적어도, 그공을 움직이는 것보다 다른 색깔의 공을 이동하는게 최소이면 그것이 출력됨. -> 옳음