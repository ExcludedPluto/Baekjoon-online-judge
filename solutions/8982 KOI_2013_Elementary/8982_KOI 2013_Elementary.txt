알고리즘
	1. 입력받은 dot을 이용해서, 수직성분, 수평성분 만들기
	2. 입력받은 hole을 정리해서, 어느 수평성분에 있는지 인덱스 정리하기
	3. 구멍을 하나씩 검사 -> 왼쪽으로 갔을때 마주치는 수직성분이 있으면 스탑, 점기록 -> 선타고 위로 올라가서 점 기록 -> 왼쪽으로 꺾어서 다시 진행하든가, 맨 위면 스탑
				오른쪽도 마찬가지로 진행
			-> 기록된 점들을 정렬해서, 물이 빠져나갈 세로줄로 이루어진 임시 수족관을 업데이트. 
			-> 만약 임시 수족관의 한 세로줄이 현재 기록된 점에서 추출한 세로줄보다 짧을시, 긴 세로줄로 업데이트
		-> 모든 구멍을 대상으로 시행
		-> 물이 빠져나가는 곳만 표시가 된 임시 아쿠아리움이 완성됨
	4. 전체 수족관의 물 - 임시 수족관의 물이 빠져나간 다음의 남은 물의 양.


다른 풀이
	1. 수족관을 모든 열마다 물의 시작깊이와 끝깊이를 기록하여 표현함.
	2. 구멍 하나씩 검사 -> 해당 열의 물을 다 뺌 -> 왼쪽 오른쪽 검사 
			-> 검사 내용 : 현재 깊이가 해당 열의 끝깊이보다 깊으면 현재깊이를 해당 열의 끝 깊이로 바꿈.
					시작 깊이가 현재 깊이 얕을 시 시작깊이를 현재 깊이로 바꿈.
		-> 모든 구멍을 대상으로 진행
	3. 내가 한 거의 반대로, 물이 남은 수족관이 만들어짐 -> 모든 열에 대하여 끝깊이-시작깊이를 더하면 남은 물의 양이 됨.


기타
	1. 수직, 수평성분을 굳이 만들필요없이 위처럼 시작 깊이, 끝깊이로 수족관을 나타내면 왼쪽, 오른쪽으로 갈때 부딫히는지 쉽게 확인가능하고
	   이전 구멍에서 뺀 상태를 그대로 유지하므로, 중복해서 뺄 걱정 안해도 됨.