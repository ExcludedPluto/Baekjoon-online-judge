알고리즘(BFS)
	1. 각 방이 어떤 통로와 연결되어있는지 기록한 배열을 구함
	2. 첫번째 로봇이 있는 방에 연결된 통로를 큐에 집어넣음. 
	3. 큐에서 하나씩 빼가며, 온 곳이 아닌 방에 두번째 로봇이 있는지 확인, 안되있으면 그 방에 연결된 통로를 다시 집어넣음.
	4. 두번째로봇이 있으면 여태까지 지나온 통로의 길이값을 다 더하고, 가장 큰 값을 빼서 리턴.





주의점
	1. (1)의 배열은 통로 배열이 아닌, 통로를 저장한 배열의 인덱스를 저장한 배열을 만들어야 메모리 절약이 된다.
	2. 기본 통로 클래스는 두 방의 번호와 통로의 길이값이 필요한데, (2)-(4)에서는 그 클래스에 어디서 왔는지 기록한 변수와 여태까지 건너온 통로의 길이값을 저장한
	 ArrayList가 필요함. 이때, 한클래스에 구현하지말고 상속을 사용하여 각각 필요한 것만 사용하면 메모리 절약을 할 수 있다.
	3. 더 줄일수 있는 방법이 분명 있다! 뭔지 모를뿐...